{
    "id": 23,
    "description": "Given a JSON file and a PNG file, extract the matrix from the JSON file, the matrix is composed of pixels encoded in 9 character strings, decode the pixels and save them in the PNG file, return the color that appears most often",
    "text": "\n    We have a json type file containing a matrix (list of lists) M\n    whose elements are strings. The matrix encodes an image.  The\n    image has width w and height h, where w is the number of columns\n    of the matrix M and h is the number of rows.  The color (r,g,b) of\n    the x,y coordinate pixel is encoded with the string in M[y][x],\n    since the string is composed by 9 digits.  The three most\n    significant digits are the encoding of the r-component, the three\n    middle ones are the encoding of the g-component and the three less\n    significant the encoding of the b-encoding.\n    Design and implement the function es23(fileJson, filePng) that\n    reads the json file and produces a new PNG file with the image\n    decoded by the json file. The function returns, also, the color\n    that appears most often in the image. In case of tie, the color\n    that precedes the others with respect to the order of the color\n    components is returned.\n    The function takes as arguments:\n        :param fileJson: the path of the json file where the matrix of\n                         the encoded image is located\n        :param filePng:  the path of the PNG file where to save the\n                         decoded image\n        :return: the color that appears most often among those of the\n                 pixels of the image\n    ",
    "algorithm": "Load the json file\ninitialize a matrix and a dictionary\nfor each element of the input matrix:\n\ndecode the pixel\n\tsaves the pixel in the empty matrix\n\tupdate the value in the dictionary for the pixel\nsave image\nreturns the pixel that appears most often",
    "tags": ["Strings", "Matrices", "Images"],
    "effort": 5,
    "clues": [],
    "from": "recupero-12-7-18"
}
