{
    "id": 65,
    "description": "Given an integer k, a list of squares (represented by a sestuple (x, y, l, r, g, b)), and a path where to save the image, the function creates a square image of side k, draws on it the squares represented in the list and saves the image obtained at the input path, returns the number of black pixels of the image",
    "text": "\n    A square on the plane is identified by the 6-tuple of integers\n    (x,y,l,r,g,b) where (x,y) is the coordinate of the top left vertex\n    of the square, l is the length of its side and the last three\n    values are its color (r,g,b).  The function es65(k, list1, fout)\n    saves a squared image of side k*k in a PNG file at the path\n    fout. The image is obtained as follows:\n    - create a black background (0,0,0) of size k by k\n    - draw in sequence the squares listed in the list1.\n    The squares listed in list1 can be fully or partially in the k by\n    k image.  The color of the squares is not always the original\n    color, but it is determined according to this rule:\n    - it is the original color, if none of the pixels on which the\n    square is drawn has a greater color,\n    - it is the maximum color among the pixels over which it is drawn,\n    otherwise.\n    A color(x,y,z) is greater than another (x',y',z') if x>x' or, in\n    case of a tie, y>y' or, in case of a tie, z>z'.  The function\n    returns the number of black pixels appearing in the image after\n    the squares have been drawn.\n\n    For example if\n    list1=[(20,50,20,0,255,0),(30,60,20,255,0,0),(60,50,20,255,0,0),(70,60,20,0,255,0)]\n    with es65(100,list1,'prova1.png') you will obtain the image in the prova1.png file\n    and the function will  return the value 8600.\n    ",
    "algorithm": "Let's start by defining a function maximum(c1, c2):\n\tgiven two colors c1 and c2\n\tit returns the major color\n\nwe define the function maxColor(img, q)\n\tgiven an image and a square\n\tdetermines for each pixel of the square which color the square should take\n\treturn the color(r, g, b)\n\nwe define the function draw(img, x, y, l, c):\n\tgiven an image, the (x, y) coordinates, square side and a color\n\tit draws the square in the image from the coordinates (x, y)\n\nNow let's write the function es65(k, list, fout):\n\tinitialize an img image, k x k, black\n\tfor each q square in the list:\n\t\tcalculate the maximum color for q in img via maxColor(..)\n\t\tdraw the square in the image via draw(..)\n\tsave the image in fout\n\tI initialize a counter at 0\n\tfor each pixel of the image:\n\t\tif the pixel is black:\n\t\t\tincrease the counter\n\treturn the counter",
    "tags": ["Images", "Matrices"],
    "effort": 6,
    "clues": [],
    "from": "esame-12-7-18"
}
