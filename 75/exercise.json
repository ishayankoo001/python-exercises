{
    "id": 75,
    "description": "given a height, a width, a color list, a list of heights, a width, and a path to a Png file, creates a blue background image and draws on it rectangles with different heights, returns the number of pixels that belong to more than one rectangle.",
    "text": "\n    Define the function es75 that takes as input\n        h:                  image height\n        w:                  image width\n        colors_list:         a list of N colors in the format (R, G, B) that must be applied, in the order from left to right, to the rectangles\n        heights_list:       a list of N heights < h\n        palace_width:       the width of each of the rectangles to draw\n        filePngOut:         PNG file path to save the image in\n        :return             number of pixels changed more than 1 time\n    and that creates an image with size w*h pixel, with a blue\n    background (0,0,255).  On the image, the function has to draw N\n    rectangles, equally spaced, and all with the same width,\n    palace_width. The rectangles have to be drawn starting from the\n    bottom of the image.  The height and color of the i-th rectangle\n    (from left to right) is given by the i-th element of colors_list\n    and heights_list, respectively.  Rectangles must be drawn so that\n    the lower rectangles remain in the foreground over the higher\n    rectangles.  The function has to return the number of pixels that\n    belong to more than one rectangle (i.e. those of rectangles that\n    have been covered by at least one other rectangle).\n\n    Note: assume that the width w of the image is always a multiple of (1+N),\n            so that the center of the x position of each building is an integer value\n    Note: assume that palace_width is an even value\n    Note: assume that all heights are less than or equal to the height h of the image\n",
    "algorithm": "The function can have two implementations with respect to the interpretation of the words 'equispaced rectangles', for the two interpretations see the file solution.py\n\nes75(..)\n\tcreate the image w*h all blue\n\tinitialize a matrix count of zeros equal in size to the image\n\tinitialize an empty list\n\ttake the length N of the list of heights\n\tfrom here on depends on the interpretation given\n\t...\n\n\ndefine a function drawRectangle(img, l, r, t, b, c, counts):\n\tthe function draws the rectangle with color c and updates the counts matrix\n\tto avoid overflowing from the image, calc new values for l, r, t, b\n\tinitialize w and h to image size\n\tl = the maximum between l and 0\n\tr = minimum between r and w\n\tt = maximum between t and 0\n\tb = minimum between b and h\n\tfor each pixel of the rectangle:\n\t\tcolor the pixel with color c\n\t\tupdate the matrix counts",
    "tags": ["Images", "Matrices"],
    "effort": 8,
    "clues": [],
    "from": "esame-15-2-18"
}
