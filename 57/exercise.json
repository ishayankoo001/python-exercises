{
    "id": 57,
    "description": "Given a grid NxN, if the grid represents a skyscraper puzzle, it returns the 4 lists North, East South, West, otherwise it returns 4 empty lists",
    "text": "\n   The skyscrapers puzzle places skyscrapers in a square grid NxN so\n      that each row and column contains only skyscrapers of different\n      heights (integer values from 1 to N).  The game is to find the\n      positions of all the skyscrapers. At the beginning, it is given\n      the number of skyscrapers visible for each row and column along\n      the 4 sides of the grid, considering that a skyscraper of height\n      h hides any skyscraper with a lower height. Then, four lists are\n      given (North, East, South and West) each of length N such that\n      for 0<i<N:\n \n       - North[i] contains the number of skyscrapers visible in column\n         i of the grid when looking from the north.\n      \n       - East[i] contains the number of skyscrapers visible in row i\n         of the grid when looking from the east.\n\n       - South[i] contains the number of skyscrapers visible in column\n         i of the grid looking from the south.\n  \n       - West[i] contains the number of skyscrapers visible in row i\n         of the grid looking from west.\n\n    Write the function es57(grid) that, given \n    \n    - a square grid NxN, represented by list of lists of integers in which\n      each list is a line of the matrix,\n\n    must return:\n\n    - a tuple in which the 4 lists North, East, South and West appear\n      in such an order, if the grid is a valid skyscraper puzzle;\n\n    - a tuple of four empty list, otherwise (i.e.: the grid is not a\n    valid skyscrapers puzzle). This can happen because there are\n    repeated numbers in a row or column, or because there are numbers\n    outside the range 1-N or because there are non numerical values.\n\n    For example\n    - if grid = [[1,2,3,4],[4,1,2,3],[3,4,1,2],[2,3,4,1]] the function\n      returns ([2,2,2,1],[1,2,2,2],[3,2,1,4],[4,1,2,3]).\n\n    - if grid = [[1,2,3,4],[4,1,c',3],[3,4,1,2],[2,3,4,1]] or\n         grid = [[1,2,3,4],[4,1,2,3],[3,4,2,1],[2,3,4,1]] or\n         grid = [[1,2,3,4],[4,1,2,3],[3,4,1,2],[2,3,6,1]] the function\n      returns ([],[],[],[]).\n\n",
    "algorithm": "the function check(grid) checks if the grid is a puzzle of skyscrapers\n\nthe function countSky(grid, scan, d), given the grid, a character between ('r', 'c') and a direction, returns the list of skyscrapers seen from one of the 4 directions N, E, S, O\n\n\n. The function will be then: \n\tinitialize the 4 lists N, S, E, O\n\t if the grid is a puzzle:\n\t\tN = countSky(grid, 'c', 1)\n\t\tS =  countSky(grid, 'c', -1)\n\t\tE = countSky(grid, 'r', -1)\n\t\tO = countSky(grid, 'r', -1)\n\treturn N, E, S, O",
    "tags": ["Matrices"],
    "effort": 6,
    "clues": [],
    "from": "recupero-23-1-18"
}
