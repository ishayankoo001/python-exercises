{
    "id": 46,
    "description": "Given as input a string, returns the substring of maximum palindrome length",
    "text": "\n    Design and implement the function es13(word) that uses at least\n    one recursive function and:\n    - takes a character string as input and, among all the substrings,\n    returns the one of maximum length that is also palindrome.  In\n    case there are more palindromes with maximum length, the first in\n    alphabetical order is returned.\n\n    Remember that: a substring is what you get from a string by\n    deleting 0 or more characters at the beginning and 0 or more\n    characters at the end; a string is said palindrome if it can be\n    read indifferently from left to right or vice versa.\n\n    For example:\n    - if word='zzzcdcaaabvv' the function will return the palindrome\n    string 'aaa'\n    - if word='adbbabbcbbaad' the function will return\n    the palindrome string 'abbcbba'\n    ",
    "algorithm": "initializes the set of substrings\nfor i ranging from 0 to word length:\n\tfor j ranging from i to word length:\n\t\tadd to the set the substring that goes from i to j+1\nsorts the substrings of the set in descending order of length\nfor each substring of the set:\n\tif it is palindrome:\n\t\treturns the substring\n\n\nto check if a string is palindrome we define a recursive palindrome(string) function:\n\tif the string length is < 2:\n\t\treturns true\n\telse:\n\t\treturn (the first character is equal to the second one) AND palindrome (the substring composed by the characters of the string except the first and the last one)",
    "tags": ["Strings", "Recursion"],
    "effort": 6,
    "clues": [],
    "from": "recupero-19-6-18"
}
