{
    "id": 78,
    "description": "Given a character string, it returns the list of 'growing substrings', using a recursive function.",
    "text": "\n        \n    Define the recursive function (or a function that uses your own\n    recursive function) es78(word), that takes as input a string of\n    characters and returns the list of different \"growing subwords\"\n    of the given word. The subwords must appear in the list in\n    alphabetical order.  Remember that a subword is what you get from\n    a word by removing 0 or more characters (in front, at the end or\n    in the middle of the word).  In addition, a subword is said to\n    grow if the characters that make it up read from left to right are\n    sorted in alphabetical order.\n    \n    For example the list returned by es78('zanzara') will be\n    ['a', 'aa', 'aaa', 'aar', 'an', 'anr', 'anz', 'ar', 'az', 'n', 'nr', 'nz', 'r', 'z', 'zz']\n",
    "algorithm": "es78(word):\n\tif the word is long 1:\n\t\treturn the list with word as element\n\tset a to the first character of word\n\tsave in list the call of es78(...) on word minus the first character\n\tcopy the list into a new list1\n\tif a is not present in the list1:\n\t\tadd a\n\tfor each element in the list:\n\t\tif a is less than or equal to the first character of the element and if the string a+element is not in the list1:\n\t\t\tadd a new a+y item to list1\n\treturn list1 sorted",
    "tags": ["Strings", "Recursion", "Sorting"],
    "effort": 5,
    "clues": [],
    "from": "esame-18-4-18"
}
